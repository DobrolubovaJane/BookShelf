---
swagger: "2.0"
info:
  description: "Book shelf"
  version: "1.0.0"
  title: ""
tags:
- name: books
  description: books api
- name: readers
  description: readers api
schemes:
- http
paths:
  '/books':
    post:
      tags:
      - books
      summary: Adding new book to shelf
      operationId: addBook
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/AddBookRequest'
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/BookModel'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorModel'
    get:
      tags:
      - books
      summary: Get books from shelf
      operationId: getAll
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: searchQuery
        type: string
        description: 'Searching by book name'
      responses:
        200:
          description: "List of books"
          schema:
            $ref: '#/definitions/BooksListModel'
  '/books/{id}':
    get:
      tags:
      - books
      summary: Get book by id
      operationId: getById
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: id
        type: string
        format: uuid
        required: true
      responses:
        200:
          description: "Returns book with specified id"
          schema:
            $ref: '#/definitions/BookModel'
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
    put:
      tags:
      - books
      summary: Update book with id
      operationId: updateBook
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: id
        type: string
        format: uuid
        required: true
      - in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/UpdateBookRequest'
      responses:
        200:
          description: "Ok"
          schema:
            $ref: '#/definitions/BookModel'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorModel'
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
    delete:
      tags:
      - books
      summary: Delete book with id
      operationId: deleteBook
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: id
        type: string
        format: uuid
        required: true
      responses:
        200:
          description: "Ok"
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
  'books/{id}/popularity':
    get:
      tags:
      - books
      summary: Get book popularity
      operationId: getPopularity
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: id
        type: string
        format: uuid
        required: true
        description: book ID
      responses:
        200:
          schema:
            $ref: '#/definitions/BooksPopularityModel'
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
  'books/{id}/averagetime':
    get:
      tags:
      - books
      summary: Get book's reading average time
      operationId: getAverageTimeOfReading
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: id
        type: string
        format: uuid
        required: true
        description: book ID
      responses:
        200:
          schema:
            $ref: '#/definitions/AverageTimeModel'
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
  '/readers':
    post:
      tags:
      - readers
      summary: Adding new reader
      operationId: addReader
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/AddReaderRequest'
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/ReaderModel'
    get:
      tags:
      - readers
      summary: Get readers of the books
      operationId: getAll
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: "List of readers"
          schema:
            $ref: '#/definitions/ReadersListModel'
  '/readers/{id}':
    get:
      tags:
      - readers
      summary: Get reader by id
      operationId: getById
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: id
        type: string
        format: uuid
        required: true
      responses:
        200:
          description: "Returns reader with specified id"
          schema:
            $ref: '#/definitions/ReaderModel'
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
    put:
      tags:
      - readers
      summary: Update reader with id
      operationId: updateReader
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: id
        type: string
        format: uuid
        required: true
      - in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/UpdateReaderRequest'
      responses:
        200:
          description: "Ok"
          schema:
            $ref: '#/definitions/ReaderModel'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorModel'
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
    delete:
      tags:
      - readers
      summary: Delete reader with id
      operationId: deleteReader
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: id
        type: string
        format: uuid
        required: true
      responses:
        200:
          description: "List of readers"
          schema:
            $ref: '#/definitions/ReadersListModel'
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
  '/readers/{id}/takeBook':
    post:
      tags:
      - readers
      summary: Taking book
      operationId: takeBook
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: id
        type: string
        format: uuid
        required: true
        description: reader ID
      - in: body
        schema:
          $ref: '#/definitions/TakeBookRequest'
        name: request
        required: true
      responses:
        200:
          description: Ok
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorModel'
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
  '/readers/{id}/returnBook':
    post:
      tags:
      - readers
      summary: Returning book
      operationId: returnBook
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: id
        type: string
        format: uuid
        required: true
        description: reader ID
      - in: body
        schema:
          $ref: '#/definitions/TakeBookRequest'
        name: request
        required: true
      responses:
        200:
          description: Ok
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorModel'
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
definitions:
  AddBookRequest:
    type: object
    required:
      - name
      - author
    properties:
      name:
        type: string
        minLength: 1
      author:
        type: string
        minLength: 1
  UpdateBookRequest:
    allOf:
    - $ref: '#/definitions/AddBookRequest'
  BookModel:
    type: object
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
      author:
        type: string
  BooksListModel:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/BookModel'
      total:
        type: integer
  BooksPopularityModel:
    type: object
    properties:
      readersCount:
        type: integer
  AverageTimeModel:
    type: object
    properties:
      daysCount:
        type: integer
      hoursCount:
        type: integer
      minutesCount:
        type: integer
  AddReaderRequest:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        minLength: 1
  UpdateReaderRequest:
    allOf:
    - $ref: '#/definitions/AddReaderRequest'
  ReaderModel:
    type: object
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
  ReadersListModel:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/ReaderModel'
      total:
        type: integer
  TakeBookRequest:
    type: object
    required:
      - bookId
    properties:
      bookId:
        type: string
        format: uuid
        minLength: 1
  ReturnBookRequest:
    allOf:
      - $ref: '#/definitions/TakeBookRequest'
  ErrorModel:
    type: object
    properties:
      message:
        type: string
